//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MESFeedClientEFModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MESFeedClientEntities : DbContext
    {
        public MESFeedClientEntities()
            : base("name=MESFeedClientEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblBundleFeedLog> tblBundleFeedLogs { get; set; }
        public virtual DbSet<tblDocumentFeedLog> tblDocumentFeedLogs { get; set; }
        public virtual DbSet<tblInventoryFeedLog> tblInventoryFeedLogs { get; set; }
        public virtual DbSet<tblItemFeedLog> tblItemFeedLogs { get; set; }
        public virtual DbSet<tblRecordFeedLog> tblRecordFeedLogs { get; set; }
        public virtual DbSet<tblWorkOrderFeedLog> tblWorkOrderFeedLogs { get; set; }
        public virtual DbSet<tblBlueMountainFeedLog> tblBlueMountainFeedLogs { get; set; }
        public virtual DbSet<tblMEStoOracleInventoryLog> tblMEStoOracleInventoryLogs { get; set; }
        public virtual DbSet<tblMEStoOracleItemLog> tblMEStoOracleItemLogs { get; set; }
        public virtual DbSet<tblMEStoOracleWorkOrderLog> tblMEStoOracleWorkOrderLogs { get; set; }
        public virtual DbSet<tblDownloadFeedLog> tblDownloadFeedLogs { get; set; }
        public virtual DbSet<tblUploadFeedLog> tblUploadFeedLogs { get; set; }
        public virtual DbSet<tblMESControl> tblMESControls { get; set; }
        public virtual DbSet<tblMesLastTrainingActionTaken> tblMesLastTrainingActionTakens { get; set; }
        public virtual DbSet<tblBlueMountainOutbound> tblBlueMountainOutbounds { get; set; }
        public virtual DbSet<tblServiceBusIntake> tblServiceBusIntakes { get; set; }
        public virtual DbSet<tblServiceBusDtlSchedule> tblServiceBusDtlSchedules { get; set; }
        public virtual DbSet<tblServiceBusDtlWorkOrder> tblServiceBusDtlWorkOrders { get; set; }
        public virtual DbSet<tblServiceBusIntakeDtl> tblServiceBusIntakeDtls { get; set; }
    
        public virtual int spLatestMESAction_Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spLatestMESAction_Get");
        }
    
        public virtual int spLatestMESAction_Update(Nullable<int> id, Nullable<bool> sync, Nullable<int> attempt)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var syncParameter = sync.HasValue ?
                new ObjectParameter("sync", sync) :
                new ObjectParameter("sync", typeof(bool));
    
            var attemptParameter = attempt.HasValue ?
                new ObjectParameter("attempt", attempt) :
                new ObjectParameter("attempt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spLatestMESAction_Update", idParameter, syncParameter, attemptParameter);
        }
    
        public virtual int spCheckLastActionsForCurrency(Nullable<int> attempts)
        {
            var attemptsParameter = attempts.HasValue ?
                new ObjectParameter("attempts", attempts) :
                new ObjectParameter("attempts", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCheckLastActionsForCurrency", attemptsParameter);
        }
    
        public virtual ObjectResult<spCheckCurrency_Result> spCheckCurrency()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCheckCurrency_Result>("spCheckCurrency");
        }
    
        public virtual int spUpdateMESQueue()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateMESQueue");
        }
    
        public virtual ObjectResult<spCheckExpiration_Result> spCheckExpiration()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCheckExpiration_Result>("spCheckExpiration");
        }
    
        public virtual int spSyncMESQueue(string emp, string doc, Nullable<bool> sync)
        {
            var empParameter = emp != null ?
                new ObjectParameter("emp", emp) :
                new ObjectParameter("emp", typeof(string));
    
            var docParameter = doc != null ?
                new ObjectParameter("doc", doc) :
                new ObjectParameter("doc", typeof(string));
    
            var syncParameter = sync.HasValue ?
                new ObjectParameter("sync", sync) :
                new ObjectParameter("sync", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSyncMESQueue", empParameter, docParameter, syncParameter);
        }
    
        public virtual int spQueueNewUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spQueueNewUsers");
        }
    
        public virtual ObjectResult<spBundleDailyChangesGet_Result> spBundleDailyChangesGet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBundleDailyChangesGet_Result>("spBundleDailyChangesGet");
        }
    
        public virtual ObjectResult<spDocDailyChangesGet_Result> spDocDailyChangesGet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDocDailyChangesGet_Result>("spDocDailyChangesGet");
        }
    
        public virtual ObjectResult<spCheckLastActions_Result> spCheckLastActions(Nullable<int> attempts)
        {
            var attemptsParameter = attempts.HasValue ?
                new ObjectParameter("attempts", attempts) :
                new ObjectParameter("attempts", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCheckLastActions_Result>("spCheckLastActions", attemptsParameter);
        }
    
        public virtual int spTrainingActionBackFeed()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spTrainingActionBackFeed");
        }
    
        public virtual ObjectResult<spGetBlueMountainAssets_Result> spGetBlueMountainAssets()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetBlueMountainAssets_Result>("spGetBlueMountainAssets");
        }
    }
}
